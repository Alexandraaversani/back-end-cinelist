// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Movie {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  releaseYear Int
  director    String
  genres      String   // Stored as comma-separated values
  rating      Float
  imageUrl    String?
  cast        String   // Stored as comma-separated values
  duration    Int      // Duration in minutes

  // Relation with UserFavorites
  favoritedBy UserFavorites[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("movies")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  bio       String?  // For the "About Me" page
  favorites UserFavorites[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model UserFavorites {
  id        Int      @id @default(autoincrement())
  userId    Int
  movieId   Int
  addedAt   DateTime @default(now())

  // Relations
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  movie     Movie    @relation(fields: [movieId], references: [id], onDelete: Cascade)

  @@unique([userId, movieId])
  @@map("user_favorites")
}
